// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CentrifugoProxySubscribeOptions centrifugo proxy subscribe options
//
// swagger:model CentrifugoProxySubscribeOptions
type CentrifugoProxySubscribeOptions struct {

	// b64data
	B64data string `json:"b64data,omitempty"`

	// b64info
	B64info string `json:"b64info,omitempty"`

	// data
	// Format: byte
	Data strfmt.Base64 `json:"data,omitempty"`

	// expire at
	ExpireAt string `json:"expireAt,omitempty"`

	// info
	// Format: byte
	Info strfmt.Base64 `json:"info,omitempty"`

	// override
	Override *CentrifugoProxySubscribeOptionOverride `json:"override,omitempty"`
}

// Validate validates this centrifugo proxy subscribe options
func (m *CentrifugoProxySubscribeOptions) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOverride(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CentrifugoProxySubscribeOptions) validateOverride(formats strfmt.Registry) error {
	if swag.IsZero(m.Override) { // not required
		return nil
	}

	if m.Override != nil {
		if err := m.Override.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("override")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("override")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this centrifugo proxy subscribe options based on the context it is used
func (m *CentrifugoProxySubscribeOptions) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateOverride(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CentrifugoProxySubscribeOptions) contextValidateOverride(ctx context.Context, formats strfmt.Registry) error {

	if m.Override != nil {

		if swag.IsZero(m.Override) { // not required
			return nil
		}

		if err := m.Override.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("override")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("override")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CentrifugoProxySubscribeOptions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CentrifugoProxySubscribeOptions) UnmarshalBinary(b []byte) error {
	var res CentrifugoProxySubscribeOptions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
