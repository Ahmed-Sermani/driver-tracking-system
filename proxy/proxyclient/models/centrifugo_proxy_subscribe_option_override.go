// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CentrifugoProxySubscribeOptionOverride centrifugo proxy subscribe option override
//
// swagger:model CentrifugoProxySubscribeOptionOverride
type CentrifugoProxySubscribeOptionOverride struct {

	// force positioning
	ForcePositioning *CentrifugoProxyBoolValue `json:"forcePositioning,omitempty"`

	// force push join leave
	ForcePushJoinLeave *CentrifugoProxyBoolValue `json:"forcePushJoinLeave,omitempty"`

	// force recovery
	ForceRecovery *CentrifugoProxyBoolValue `json:"forceRecovery,omitempty"`

	// join leave
	JoinLeave *CentrifugoProxyBoolValue `json:"joinLeave,omitempty"`

	// presence
	Presence *CentrifugoProxyBoolValue `json:"presence,omitempty"`
}

// Validate validates this centrifugo proxy subscribe option override
func (m *CentrifugoProxySubscribeOptionOverride) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateForcePositioning(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateForcePushJoinLeave(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateForceRecovery(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateJoinLeave(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePresence(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CentrifugoProxySubscribeOptionOverride) validateForcePositioning(formats strfmt.Registry) error {
	if swag.IsZero(m.ForcePositioning) { // not required
		return nil
	}

	if m.ForcePositioning != nil {
		if err := m.ForcePositioning.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("forcePositioning")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("forcePositioning")
			}
			return err
		}
	}

	return nil
}

func (m *CentrifugoProxySubscribeOptionOverride) validateForcePushJoinLeave(formats strfmt.Registry) error {
	if swag.IsZero(m.ForcePushJoinLeave) { // not required
		return nil
	}

	if m.ForcePushJoinLeave != nil {
		if err := m.ForcePushJoinLeave.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("forcePushJoinLeave")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("forcePushJoinLeave")
			}
			return err
		}
	}

	return nil
}

func (m *CentrifugoProxySubscribeOptionOverride) validateForceRecovery(formats strfmt.Registry) error {
	if swag.IsZero(m.ForceRecovery) { // not required
		return nil
	}

	if m.ForceRecovery != nil {
		if err := m.ForceRecovery.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("forceRecovery")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("forceRecovery")
			}
			return err
		}
	}

	return nil
}

func (m *CentrifugoProxySubscribeOptionOverride) validateJoinLeave(formats strfmt.Registry) error {
	if swag.IsZero(m.JoinLeave) { // not required
		return nil
	}

	if m.JoinLeave != nil {
		if err := m.JoinLeave.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("joinLeave")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("joinLeave")
			}
			return err
		}
	}

	return nil
}

func (m *CentrifugoProxySubscribeOptionOverride) validatePresence(formats strfmt.Registry) error {
	if swag.IsZero(m.Presence) { // not required
		return nil
	}

	if m.Presence != nil {
		if err := m.Presence.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("presence")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("presence")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this centrifugo proxy subscribe option override based on the context it is used
func (m *CentrifugoProxySubscribeOptionOverride) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateForcePositioning(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateForcePushJoinLeave(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateForceRecovery(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateJoinLeave(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidatePresence(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CentrifugoProxySubscribeOptionOverride) contextValidateForcePositioning(ctx context.Context, formats strfmt.Registry) error {

	if m.ForcePositioning != nil {

		if swag.IsZero(m.ForcePositioning) { // not required
			return nil
		}

		if err := m.ForcePositioning.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("forcePositioning")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("forcePositioning")
			}
			return err
		}
	}

	return nil
}

func (m *CentrifugoProxySubscribeOptionOverride) contextValidateForcePushJoinLeave(ctx context.Context, formats strfmt.Registry) error {

	if m.ForcePushJoinLeave != nil {

		if swag.IsZero(m.ForcePushJoinLeave) { // not required
			return nil
		}

		if err := m.ForcePushJoinLeave.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("forcePushJoinLeave")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("forcePushJoinLeave")
			}
			return err
		}
	}

	return nil
}

func (m *CentrifugoProxySubscribeOptionOverride) contextValidateForceRecovery(ctx context.Context, formats strfmt.Registry) error {

	if m.ForceRecovery != nil {

		if swag.IsZero(m.ForceRecovery) { // not required
			return nil
		}

		if err := m.ForceRecovery.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("forceRecovery")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("forceRecovery")
			}
			return err
		}
	}

	return nil
}

func (m *CentrifugoProxySubscribeOptionOverride) contextValidateJoinLeave(ctx context.Context, formats strfmt.Registry) error {

	if m.JoinLeave != nil {

		if swag.IsZero(m.JoinLeave) { // not required
			return nil
		}

		if err := m.JoinLeave.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("joinLeave")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("joinLeave")
			}
			return err
		}
	}

	return nil
}

func (m *CentrifugoProxySubscribeOptionOverride) contextValidatePresence(ctx context.Context, formats strfmt.Registry) error {

	if m.Presence != nil {

		if swag.IsZero(m.Presence) { // not required
			return nil
		}

		if err := m.Presence.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("presence")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("presence")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CentrifugoProxySubscribeOptionOverride) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CentrifugoProxySubscribeOptionOverride) UnmarshalBinary(b []byte) error {
	var res CentrifugoProxySubscribeOptionOverride
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
